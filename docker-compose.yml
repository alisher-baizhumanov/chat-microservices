version: '3.8'

services:
  postgres:
    container_name: chat-microservices-postgres
    image: postgres:16.3-alpine3.20
    ports:
      - "55010:5432"
    environment:
      - "POSTGRES_DB=${PG_DATABASE_NAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    restart: always
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    networks:
      - inter-service-network

  migrator:
    container_name: chat-microservices-migrator
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: services/migrator/Dockerfile
    restart: on-failure
    networks:
      - inter-service-network

  redis:
    container_name: chat-microservices-redis
    image: redis:7.2.5-alpine3.20
    ports:
      - "55014:6379"
    restart: always
    volumes:
      - redis-volume:/data
    networks:
      - inter-service-network

  auth:
    container_name: chat-microservices-auth
    depends_on:
      - postgres
      - redis
      - migrator
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    ports:
      - "55051:55051"
      - "55052:55052"
    environment:
      - "GRPC_SERVER_HOST=localhost"
      - "GRPC_SERVER_PORT=55051"
      - "HTTP_SERVER_PORT=55052"
      - "DB_DSN=${POSTGRES_DB_DSN}"
      - "CACHE_DSN=${REDIS_DSN}"
      - "CACHE_TTL=${REDIS_TTL}"
      - "ACCESS_TOKEN_TTL=${ACCESS_TOKEN_TTL}"
      - "REFRESH_TOKEN_TTL=${REFRESH_TOKEN_TTL}"
      - "ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}"
      - "REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}"
    restart: unless-stopped
    networks:
      - inter-service-network

  mongo:
    container_name: chat-microservices-mongo
    image: mongo:8.0.0-rc11
    ports:
      - "55012:27017"
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}"
      - "MONGO_INITDB_DATABASE=${MONGO_DATABASE_NAME}"
    restart: always
    volumes:
      - mongo-volume:/data/db
    networks:
      - inter-service-network

  chat-server:
    container_name: chat-microservices-chat-server
    depends_on:
      - mongo
    build:
      context: .
      dockerfile: services/chat-server/Dockerfile
    ports:
      - "55054:55054"
      - "55055:55055"
    environment:
      - "GRPC_SERVER_HOST=localhost"
      - "GRPC_SERVER_PORT=55054"
      - "HTTP_SERVER_PORT=55055"
      - "DB_DSN=${MONGO_DB_DSN}"
      - "DATABASE=${MONGO_DATABASE_NAME}"
    restart: unless-stopped
    networks:
      - inter-service-network

volumes:
  postgres-volume:
    driver: local
  redis-volume:
    driver: local
  mongo-volume:
    driver: local

networks:
  inter-service-network:
    driver: bridge